from multiprocessing import Process
import numpy as np
import shutil
import os

source='D://Downloads/'
names1=os.listdir(source+'first_asm')
names2=os.listdir(source+'second_asm')
names3=os.listdir(source+'third_asm')
names4=os.listdir(source+'fourth_asm')
names5=os.listdir(source+'fifth_asm')

def get_first_800_b(lines):
    first_800_b=[]
    
    for line in lines:
        for byte in line:
            first_800_b.append(byte)
            if len(first_800_b)==800:
                break
        if len(first_800_b)==800:
            break
    return first_800_b

def p1():
    
    feat_mat1=np.ndarray((len(names1), 800), dtype=int)
    i=0
    for f in names1:
        
        with open(source+'first_asm'+'/'+f, 'rb') as file:
            first_800_b=get_first_800_b(file.readlines())
            j=0
            for feat in first_800_b:
                feat_mat1[i][j]=feat
                j+=1
        i+=1
    np.save(source+'image_1.npy', feat_mat1)   
def p2():
    
    feat_mat2=np.ndarray((len(names2), 800), dtype=int)
    i=0
    for f in names2:
        
        with open(source+'second_asm'+'/'+f, 'rb') as file:
            first_800_b=get_first_800_b(file.readlines())
            j=0
            for feat in first_800_b:
                feat_mat2[i][j]=feat
                j+=1
        i+=1
    np.save(source+'image_2.npy', feat_mat2)
def p3():
    
    feat_mat3=np.ndarray((len(names3), 800), dtype=int)
    i=0
    for f in names3:
        
        with open(source+'third_asm'+'/'+f, 'rb') as file:
            first_800_b=get_first_800_b(file.readlines())
            j=0
            for feat in first_800_b:
                feat_mat3[i][j]=feat
                j+=1
        i+=1
    np.save(source+'image_3.npy', feat_mat3)
def p4():
    
    feat_mat4=np.ndarray((len(names4), 800), dtype=int)
    i=0
    for f in names4:
        
        with open(source+'fourth_asm'+'/'+f, 'rb') as file:
            first_800_b=get_first_800_b(file.readlines())
            j=0
            for feat in first_800_b:
                feat_mat4[i][j]=feat
                j+=1
        i+=1
    np.save(source+'image_4.npy', feat_mat4)
def p5():
    
    feat_mat5=np.ndarray((len(names5), 800), dtype=int)
    i=0
    for f in names5:
        
        with open(source+'fifth_asm'+'/'+f, 'rb') as file:
            first_800_b=get_first_800_b(file.readlines())
            j=0
            for feat in first_800_b:
                feat_mat5[i][j]=feat
                j+=1
        i+=1
    np.save(source+'image_5.npy', feat_mat5)
if __name__ == '__main__':
       
    p_1=Process(target=p1)
    p_2=Process(target=p2)
    p_3=Process(target=p3)
    p_4=Process(target=p4)
    p_5=Process(target=p5)
    #p1.start() is used to start the thread execution
    p_1.start()
    p_2.start()
    p_3.start()
    p_4.start()
    p_5.start()
    #After completion all the threads are joined
    p_1.join()
    p_2.join()
    p_3.join()
    p_4.join()
    p_5.join()